fun atjs_parse(text, usetransforms) {this e = false; this i = 0; this tokens = atjs_parse_pt_tokens(); if (e) {ret [tokens, e]} else if (i < len(text) || tokens == false) {ret [tokens, atjs_parse_error_t()]}; i = 0; this result = atjs_parse_pe_statements(); if (e) {ret [result, e]} else if (i < len(tokens) || result == false) {ret [result, atjs_parse_error_t()]}; if (usetransforms) {result = atjs_parse_evaltransforms(result[0])} else {result = result[0]}; ret [result, e]}; fun atjs_parse_init(type) {ret [type, [], i]}; fun atjs_parse_handle(data, save) {if (e || data == false) {ret false} else {if (save) {this expr; for (expr in data) {append(result[1], expr)}}; ret true}}; fun atjs_parse_encstring(string) {string = str([string]); ret string[1:-1]}; fun atjs_parse_formatloc(text, i) {this loc = atjs_parse_getloc(text, i); ret "line " + str(loc[1] + 1) + " character " + str(loc[2] + 1)}; fun atjs_parse_getloc(text, i) {this j = 0; this k = 0; this l = 0; while (j < i && j < len(text)) {if (text[j] == "\n") {k += 1; l = j + 1}; j += 1}; ret [i, k, i - l]}; fun atjs_parse_evaltransforms(expr) {this val; if (expr[1][:0] == "") {val = expr[1]} else {val = []; this item; for (item in expr[1]) {append(val, atjs_parse_evaltransforms(item))}}; ret atjs_parse_transform(expr[0], val, expr[2])}; fun atjs_parse_e_result() {if (e) {ret false} else if (result[0] == false) {ret result[1]} else {if (result[2] < len(tokens)) {result[2] = tokens[result[2]][2]} else {result[2] = len(text)}; ret [result]}}; fun atjs_parse_match_eo(string, offset, inverse) {this j = i + (offset || 0); if (j < len(tokens) && tokens[j][0] == string) {if (offset == "") {i += 1}; if (inverse) {ret false} else {ret [tokens[j]]}} else {if (inverse) {ret true} else {ret false}}}; fun atjs_parse_matchany_eo(offset, inverse) {this j = i + (offset || 0); if (j < len(tokens)) {if (offset == "") {i += 1}; if (inverse) {ret false} else {ret [tokens[j]]}} else {if (inverse) {ret true} else {ret false}}}; fun atjs_parse_match_e(string) {ret atjs_parse_match_eo(string, "", false)}; fun atjs_parse_matchany_e() {ret atjs_parse_matchany_eo("", false)}; fun atjs_parse_error_e() {if (i < len(tokens)) {ret "Unexpected" + ((tokens[i][0] == tokens[i][1] && "") || " " + tokens[i][0]) + " token " + atjs_parse_encstring(tokens[i][1]) + " at " + atjs_parse_formatloc(text, tokens[i][2])} else {ret "Unexpected end of input"}}; fun atjs_parse_t_result() {if (e) {ret false} else if (result[0] == false) {ret result[1]} else {result[1] = atjs_parse_jointokens(result[1]); ret [result]}}; fun atjs_parse_jointokens(tokens) {this result = ""; this token; for (token in tokens) {result += token[1]}; ret result}; fun atjs_parse_match_to(string, offset, inverse) {this j = i + (offset || 0); if (j + len(string) <= len(text) && text[j:j+len(string)] == string) {if (offset == "") {i += len(string)}; if (inverse) {ret false} else {ret [[string, string, j]]}} else {if (inverse) {ret true} else {ret false}}}; fun atjs_parse_matchany_to(offset, inverse) {this j = i + (offset || 0); if (j < len(text)) {if (offset == "") {i += 1}; if (inverse) {ret false} else {ret [[text[j], text[j], j]]}} else {if (inverse) {ret true} else {ret false}}}; fun atjs_parse_matchchars_to(chars, charsinverse, offset, inverse) {this j = i + (offset || 0); this match = false; if (j < len(text)) {this n = ord(text[j]); this range; for (range in chars) {if (len(range) == 1) {if (ord(range) == n) {match = true; break}} else {if (ord(range[0]) <= n && n <= ord(range[1])) {match = true; break}}}; if (charsinverse) {match = !match}}; if (match) {if (offset == "") {i += 1}; if (inverse) {ret false} else {ret [[text[j], text[j], j]]}} else {if (inverse) {ret true} else {ret false}}}; fun atjs_parse_match_t(string) {ret atjs_parse_match_to(string, "", false)}; fun atjs_parse_matchany_t() {ret atjs_parse_matchany_to("", false)}; fun atjs_parse_matchchars_t(chars, inverse) {ret atjs_parse_matchchars_to(chars, inverse, "", false)}; fun atjs_parse_error_t() {if (i < len(text)) {ret "Invalid syntax at " + atjs_parse_formatloc(text, i)} else {ret "Unexpected end of input"}}; fun atjs_parse_pe_statements() {this result = atjs_parse_init('statements');  while (!e && (atjs_parse_handle(atjs_parse_pe_closedstatement(), true))) {}; ret atjs_parse_e_result()}; fun atjs_parse_pe_closedstatement() {this result = atjs_parse_init(false); if (atjs_parse_handle(atjs_parse_pe_blockstatement(), true)) { if (!e) {atjs_parse_handle(atjs_parse_match_e('statementend'), false)};} else if (!e) {if (atjs_parse_handle(atjs_parse_pe_linestatement(), true)) { if (!e && !(atjs_parse_handle(atjs_parse_match_e('statementend'), false))) {e = atjs_parse_error_e()};} else if (!e) {ret false;}} ret atjs_parse_e_result()}; fun atjs_parse_pe_blockstatement() {this result = atjs_parse_init(false); if (!(atjs_parse_handle(atjs_parse_pe_if(), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_pe_for(), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_pe_while(), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_pe_function(), true)) && !e) {ret false;}}}} ret atjs_parse_e_result()}; fun atjs_parse_pe_if() {this result = atjs_parse_init('if'); if (atjs_parse_handle(atjs_parse_match_e('if'), false)) { if (!e && !(atjs_parse_handle(atjs_parse_match_e('('), false))) {e = atjs_parse_error_e()}; if (!e && !(atjs_parse_handle(atjs_parse_pe_expression(), true))) {e = atjs_parse_error_e()}; if (!e && !(atjs_parse_handle(atjs_parse_match_e(')'), false))) {e = atjs_parse_error_e()}; if (!e && !(atjs_parse_handle(atjs_parse_pe_codeblock(), true))) {e = atjs_parse_error_e()}; if (!e) {atjs_parse_handle(atjs_parse_pg_0(), false)};} else if (!e) {ret false;} ret atjs_parse_e_result()}; fun atjs_parse_pe_for() {this result = atjs_parse_init('for'); if (atjs_parse_handle(atjs_parse_match_e('for'), false)) { if (!e && !(atjs_parse_handle(atjs_parse_match_e('('), false))) {e = atjs_parse_error_e()}; if (!e && !(atjs_parse_handle(atjs_parse_match_e('name'), true))) {e = atjs_parse_error_e()}; if (!e && !(atjs_parse_handle(atjs_parse_match_e('in'), false))) {e = atjs_parse_error_e()}; if (!e && !(atjs_parse_handle(atjs_parse_pe_expression(), true))) {e = atjs_parse_error_e()}; if (!e && !(atjs_parse_handle(atjs_parse_match_e(')'), false))) {e = atjs_parse_error_e()}; if (!e && !(atjs_parse_handle(atjs_parse_pe_codeblock(), true))) {e = atjs_parse_error_e()};} else if (!e) {ret false;} ret atjs_parse_e_result()}; fun atjs_parse_pe_while() {this result = atjs_parse_init('while'); if (atjs_parse_handle(atjs_parse_match_e('while'), false)) { if (!e && !(atjs_parse_handle(atjs_parse_match_e('('), false))) {e = atjs_parse_error_e()}; if (!e && !(atjs_parse_handle(atjs_parse_pe_expression(), true))) {e = atjs_parse_error_e()}; if (!e && !(atjs_parse_handle(atjs_parse_match_e(')'), false))) {e = atjs_parse_error_e()}; if (!e && !(atjs_parse_handle(atjs_parse_pe_codeblock(), true))) {e = atjs_parse_error_e()};} else if (!e) {ret false;} ret atjs_parse_e_result()}; fun atjs_parse_pe_function() {this result = atjs_parse_init('function'); if (atjs_parse_handle(atjs_parse_match_e('fun'), false)) { if (!e && !(atjs_parse_handle(atjs_parse_match_e('name'), true))) {e = atjs_parse_error_e()}; if (!e && !(atjs_parse_handle(atjs_parse_match_e('('), false))) {e = atjs_parse_error_e()}; if (!e && !(atjs_parse_handle(atjs_parse_pe_params(), true))) {e = atjs_parse_error_e()}; if (!e && !(atjs_parse_handle(atjs_parse_match_e(')'), false))) {e = atjs_parse_error_e()}; if (!e && !(atjs_parse_handle(atjs_parse_pe_codeblock(), true))) {e = atjs_parse_error_e()};} else if (!e) {ret false;} ret atjs_parse_e_result()}; fun atjs_parse_pe_params() {this result = atjs_parse_init('params');  if (!e) {atjs_parse_handle(atjs_parse_pg_2(), false)}; ret atjs_parse_e_result()}; fun atjs_parse_pe_linestatement() {this result = atjs_parse_init(false); if (!(atjs_parse_handle(atjs_parse_match_e('break'), true)) && !e) {if (atjs_parse_handle(atjs_parse_match_e('ret'), false)) { if (!e) {atjs_parse_handle(atjs_parse_pe_expression(), true)}; result[0] = 'return';} else if (!e) {if (atjs_parse_handle(atjs_parse_match_e('this'), false)) { if (!e && !(atjs_parse_handle(atjs_parse_match_e('name'), true))) {e = atjs_parse_error_e()}; if (!e) {atjs_parse_handle(atjs_parse_pg_10(), false)}; result[0] = 'declare';} else if (!e) {if (atjs_parse_handle(atjs_parse_match_e('name'), true)) { if (!e && !(atjs_parse_handle(atjs_parse_pg_7(), false))) {e = atjs_parse_error_e()};} else if (!e) {if (atjs_parse_handle(atjs_parse_match_e('@'), false)) { if (!e && !(atjs_parse_handle(atjs_parse_pg_4(), false))) {e = atjs_parse_error_e()}; if (!e) {atjs_parse_handle(atjs_parse_pg_5(), false)}; if (!e) {atjs_parse_handle(atjs_parse_pg_6(), false)}; result[0] = 'extimport';} else if (!e) {ret false;}}}}} ret atjs_parse_e_result()}; fun atjs_parse_pe_propref() {this result = atjs_parse_init('propref'); if (atjs_parse_handle(atjs_parse_pe_proprefitem(), true)) {while (atjs_parse_handle(atjs_parse_pe_proprefitem(), true)) {};} else if (!e) {ret false;} ret atjs_parse_e_result()}; fun atjs_parse_pe_proprefitem() {this result = atjs_parse_init(false); if (atjs_parse_handle(atjs_parse_match_e('.'), false)) { if (!e && !(atjs_parse_handle(atjs_parse_match_e('name'), true))) {e = atjs_parse_error_e()};} else if (!e) {if (atjs_parse_handle(atjs_parse_match_e('['), false)) { if (!e && !(atjs_parse_handle(atjs_parse_pg_11(), false))) {e = atjs_parse_error_e()}; if (!e && !(atjs_parse_handle(atjs_parse_match_e(']'), false))) {e = atjs_parse_error_e()};} else if (!e) {ret false;}} ret atjs_parse_e_result()}; fun atjs_parse_pe_codeblock() {this result = atjs_parse_init(false); if (atjs_parse_handle(atjs_parse_match_e('{'), false)) { if (!e && !(atjs_parse_handle(atjs_parse_pe_statements(), true))) {e = atjs_parse_error_e()}; if (!e && !(atjs_parse_handle(atjs_parse_match_e('}'), false))) {e = atjs_parse_error_e()};} else if (!e) {ret false;} ret atjs_parse_e_result()}; fun atjs_parse_pe_expression() {this result = atjs_parse_init(false); if (!(atjs_parse_handle(atjs_parse_pe_or(), true)) && !e) {ret false;} ret atjs_parse_e_result()}; fun atjs_parse_pe_or() {this result = atjs_parse_init('or'); if (atjs_parse_handle(atjs_parse_pe_and(), true)) { if (!e && !(atjs_parse_handle(atjs_parse_pg_12(), false))) {e = atjs_parse_error_e()};} else if (!e) {ret false;} ret atjs_parse_e_result()}; fun atjs_parse_pe_and() {this result = atjs_parse_init('and'); if (atjs_parse_handle(atjs_parse_pe_compare(), true)) { if (!e && !(atjs_parse_handle(atjs_parse_pg_14(), false))) {e = atjs_parse_error_e()};} else if (!e) {ret false;} ret atjs_parse_e_result()}; fun atjs_parse_pe_compare() {this result = atjs_parse_init('binop'); if (atjs_parse_handle(atjs_parse_pe_sum(), true)) { if (!e && !(atjs_parse_handle(atjs_parse_pg_16(), false))) {e = atjs_parse_error_e()};} else if (!e) {ret false;} ret atjs_parse_e_result()}; fun atjs_parse_pe_sum() {this result = atjs_parse_init('binop'); if (atjs_parse_handle(atjs_parse_pe_product(), true)) { if (!e && !(atjs_parse_handle(atjs_parse_pg_18(), false))) {e = atjs_parse_error_e()};} else if (!e) {ret false;} ret atjs_parse_e_result()}; fun atjs_parse_pe_product() {this result = atjs_parse_init('binop'); if (atjs_parse_handle(atjs_parse_pe_exponent(), true)) { if (!e && !(atjs_parse_handle(atjs_parse_pg_21(), false))) {e = atjs_parse_error_e()};} else if (!e) {ret false;} ret atjs_parse_e_result()}; fun atjs_parse_pe_exponent() {this result = atjs_parse_init('binop'); if (atjs_parse_handle(atjs_parse_pe_range(), true)) { if (!e && !(atjs_parse_handle(atjs_parse_pg_23(), false))) {e = atjs_parse_error_e()};} else if (!e) {ret false;} ret atjs_parse_e_result()}; fun atjs_parse_pe_range() {this result = atjs_parse_init('range'); if (atjs_parse_handle(atjs_parse_pe_listref(), true)) { if (!e && !(atjs_parse_handle(atjs_parse_pg_24(), false))) {e = atjs_parse_error_e()};} else if (!e) {ret false;} ret atjs_parse_e_result()}; fun atjs_parse_pe_listref() {this result = atjs_parse_init('listref'); if (atjs_parse_handle(atjs_parse_pe_value(), true)) { if (!e && !(atjs_parse_handle(atjs_parse_pg_26(), false))) {e = atjs_parse_error_e()};} else if (!e) {ret false;} ret atjs_parse_e_result()}; fun atjs_parse_pe_listrefparam() {this result = atjs_parse_init(false); if (atjs_parse_handle(atjs_parse_match_e(':'), false)) { if (!e && !(atjs_parse_handle(atjs_parse_pe_empty(), true))) {e = atjs_parse_error_e()}; if (!e) {atjs_parse_handle(atjs_parse_pe_expression(), true)}; result[0] = 'slice';} else if (!e) {if (atjs_parse_handle(atjs_parse_pe_expression(), true)) { if (!e) {atjs_parse_handle(atjs_parse_pg_28(), false)};} else if (!e) {ret false;}} ret atjs_parse_e_result()}; fun atjs_parse_pe_value() {this result = atjs_parse_init(false); if (!(atjs_parse_handle(atjs_parse_match_e('number'), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_match_e('string'), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_match_e('true'), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_match_e('false'), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_pe_list(), true)) && !e) {if (atjs_parse_handle(atjs_parse_match_e('-'), false)) { if (!e && !(atjs_parse_handle(atjs_parse_pe_value(), true))) {e = atjs_parse_error_e()}; result[0] = 'neg';} else if (!e) {if (atjs_parse_handle(atjs_parse_match_e('+'), false)) { if (!e && !(atjs_parse_handle(atjs_parse_pe_value(), true))) {e = atjs_parse_error_e()}; result[0] = 'abs';} else if (!e) {if (atjs_parse_handle(atjs_parse_match_e('!'), false)) { if (!e && !(atjs_parse_handle(atjs_parse_pe_value(), true))) {e = atjs_parse_error_e()}; result[0] = 'not';} else if (!e) {if (atjs_parse_handle(atjs_parse_match_e('('), false)) { if (!e && !(atjs_parse_handle(atjs_parse_pe_expression(), true))) {e = atjs_parse_error_e()}; if (!e && !(atjs_parse_handle(atjs_parse_match_e(')'), false))) {e = atjs_parse_error_e()};} else if (!e) {if (atjs_parse_handle(atjs_parse_match_e('name'), true)) { if (!e) {atjs_parse_handle(atjs_parse_pg_29(), false)};} else if (!e) {ret false;}}}}}}}}}} ret atjs_parse_e_result()}; fun atjs_parse_pe_args() {this result = atjs_parse_init('args');  if (!e) {atjs_parse_handle(atjs_parse_pg_30(), false)}; ret atjs_parse_e_result()}; fun atjs_parse_pe_list() {this result = atjs_parse_init('list'); if (atjs_parse_handle(atjs_parse_match_e('['), false)) { if (!e) {atjs_parse_handle(atjs_parse_pg_32(), false)}; if (!e && !(atjs_parse_handle(atjs_parse_match_e(']'), false))) {e = atjs_parse_error_e()};} else if (!e) {ret false;} ret atjs_parse_e_result()}; fun atjs_parse_pe_empty() {this result = atjs_parse_init('empty');  ret atjs_parse_e_result()}; fun atjs_parse_pt_tokens() {this result = atjs_parse_init(false);  if (!e) {atjs_parse_handle(atjs_parse_pt_anyws(), true)}; while (!e && (atjs_parse_handle(atjs_parse_pg_35(), false))) {}; ret atjs_parse_t_result()}; fun atjs_parse_pt_curlygrouptokens() {this result = atjs_parse_init(false); if (atjs_parse_handle(atjs_parse_match_t('{'), true)) { if (!e && !(atjs_parse_handle(atjs_parse_pt_tokens(), true))) {e = atjs_parse_error_t()}; if (!e && !(atjs_parse_handle(atjs_parse_match_t('}'), true))) {e = atjs_parse_error_t()};} else if (!e) {ret false;} ret atjs_parse_t_result()}; fun atjs_parse_pt_othergrouptokens() {this result = atjs_parse_init(false); if (atjs_parse_handle(atjs_parse_matchchars_t(['[', '('], false), true)) { if (!e && !(atjs_parse_handle(atjs_parse_pt_crosslinetokens(), true))) {e = atjs_parse_error_t()}; if (!e && !(atjs_parse_handle(atjs_parse_matchchars_t([']', ')'], false), true))) {e = atjs_parse_error_t()};} else if (!e) {ret false;} ret atjs_parse_t_result()}; fun atjs_parse_pt_crosslinetokens() {this result = atjs_parse_init(false);  if (!e) {atjs_parse_handle(atjs_parse_pt_anyws(), true)}; while (!e && (atjs_parse_handle(atjs_parse_pg_36(), false))) {}; ret atjs_parse_t_result()}; fun atjs_parse_pt_tokenorgroup() {this result = atjs_parse_init(false); if (!(atjs_parse_handle(atjs_parse_pt_curlygrouptokens(), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_pt_othergrouptokens(), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_pt_token(), true)) && !e) {ret false;}}} ret atjs_parse_t_result()}; fun atjs_parse_pt_ws() {this result = atjs_parse_init(false); if (atjs_parse_handle(atjs_parse_pt_linews(), false)) { if (!e) {atjs_parse_handle(atjs_parse_pg_38(), false)};} else if (!e) {if (atjs_parse_handle(atjs_parse_pt_statementend(), true)) { if (!e) {atjs_parse_handle(atjs_parse_pt_anyws(), true)};} else if (!e) {if (atjs_parse_handle(atjs_parse_pg_37(), false)) { if (!e && !(atjs_parse_handle(atjs_parse_pt_emptyend(), true))) {e = atjs_parse_error_t()};} else if (!e) {ret false;}}} ret atjs_parse_t_result()}; fun atjs_parse_pt_emptyend() {this result = atjs_parse_init('statementend'); if (!(atjs_parse_handle(atjs_parse_match_t(''), true)) && !e) {ret false;} ret atjs_parse_t_result()}; fun atjs_parse_pt_statementend() {this result = atjs_parse_init('statementend'); if (!(atjs_parse_handle(atjs_parse_matchchars_t(['\n', ';'], false), true)) && !e) {ret false;} ret atjs_parse_t_result()}; fun atjs_parse_pt_linews() {this result = atjs_parse_init('linews'); if (atjs_parse_handle(atjs_parse_pg_40(), false)) {while (atjs_parse_handle(atjs_parse_pg_40(), false)) {};} else if (!e) {ret false;} ret atjs_parse_t_result()}; fun atjs_parse_pt_comment() {this result = atjs_parse_init('comment'); if (atjs_parse_handle(atjs_parse_match_t('//'), true)) { while (!e && (atjs_parse_handle(atjs_parse_matchchars_t(['\n'], true), true))) {};} else if (!e) {if (atjs_parse_handle(atjs_parse_match_t('/*'), true)) { while (!e && (atjs_parse_handle(atjs_parse_pg_41(), false))) {}; if (!e && !(atjs_parse_handle(atjs_parse_match_t('*/'), true))) {e = atjs_parse_error_t()};} else if (!e) {ret false;}} ret atjs_parse_t_result()}; fun atjs_parse_pt_anyws() {this result = atjs_parse_init(false); if (atjs_parse_handle(atjs_parse_pg_42(), false)) {while (atjs_parse_handle(atjs_parse_pg_42(), false)) {};} else if (!e) {ret false;} ret atjs_parse_t_result()}; fun atjs_parse_pt_token() {this result = atjs_parse_init(false); if (!(atjs_parse_handle(atjs_parse_pt_string(), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_pt_specialsyntax(), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_pt_numorsign(), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_pt_symbol(), true)) && !e) {ret false;}}}} ret atjs_parse_t_result()}; fun atjs_parse_pt_specialsyntax() {this result = atjs_parse_init(false); if (!(atjs_parse_handle(atjs_parse_match_t('||'), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_match_t('&&'), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_pt_assignop(), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_pt_compareop2(), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_match_t('='), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_pt_compareop1(), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_pt_productop(), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_match_t('^'), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_match_t('!'), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_match_t(','), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_match_t(':'), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_match_t('@'), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_match_t('.'), true)) && !e) {ret false;}}}}}}}}}}}}} ret atjs_parse_t_result()}; fun atjs_parse_pt_assignop() {this result = atjs_parse_init('assignop'); if (!(atjs_parse_handle(atjs_parse_match_t('+='), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_match_t('-='), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_match_t('*='), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_match_t('/='), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_match_t('^='), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_match_t('%='), true)) && !e) {ret false;}}}}}} ret atjs_parse_t_result()}; fun atjs_parse_pt_compareop2() {this result = atjs_parse_init('compareop'); if (!(atjs_parse_handle(atjs_parse_match_t('=='), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_match_t('!='), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_match_t('<='), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_match_t('>='), true)) && !e) {ret false;}}}} ret atjs_parse_t_result()}; fun atjs_parse_pt_compareop1() {this result = atjs_parse_init('compareop'); if (!(atjs_parse_handle(atjs_parse_match_t('<'), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_match_t('>'), true)) && !e) {ret false;}} ret atjs_parse_t_result()}; fun atjs_parse_pt_productop() {this result = atjs_parse_init('productop'); if (!(atjs_parse_handle(atjs_parse_match_t('*'), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_match_t('/'), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_match_t('%'), true)) && !e) {ret false;}}} ret atjs_parse_t_result()}; fun atjs_parse_pt_numorsign() {this result = atjs_parse_init(false); if (atjs_parse_handle(atjs_parse_matchchars_t(['+', '-'], false), true)) { if (!e) {atjs_parse_handle(atjs_parse_pg_43(), false)};} else if (!e) {if (atjs_parse_handle(atjs_parse_pt_digits(), true)) { result[0] = 'number';} else if (!e) {ret false;}} ret atjs_parse_t_result()}; fun atjs_parse_pt_digits() {this result = atjs_parse_init('digits'); if (atjs_parse_handle(atjs_parse_matchchars_t(['09'], false), true)) {while (atjs_parse_handle(atjs_parse_matchchars_t(['09'], false), true)) {};} else if (!e) {ret false;} ret atjs_parse_t_result()}; fun atjs_parse_pt_symbol() {this result = atjs_parse_init(false); if (atjs_parse_handle(atjs_parse_pt_word(), true)) { if (!e) {atjs_parse_handle(atjs_parse_pg_44(), false)};} else if (!e) {if (!(atjs_parse_handle(atjs_parse_pt_name(), true)) && !e) {ret false;}} ret atjs_parse_t_result()}; fun atjs_parse_pt_word() {this result = atjs_parse_init(false); if (!(atjs_parse_handle(atjs_parse_match_t('this'), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_match_t('if'), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_match_t('else'), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_match_t('true'), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_match_t('false'), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_match_t('on'), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_match_t('off'), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_match_t('yes'), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_match_t('no'), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_match_t('for'), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_match_t('in'), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_match_t('while'), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_match_t('to'), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_match_t('upto'), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_match_t('fun'), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_match_t('ret'), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_match_t('break'), true)) && !e) {ret false;}}}}}}}}}}}}}}}}} ret atjs_parse_t_result()}; fun atjs_parse_pt_name() {this result = atjs_parse_init('name'); if (atjs_parse_handle(atjs_parse_matchchars_t(['az', 'AZ', '_'], false), true)) { if (!e) {atjs_parse_handle(atjs_parse_pt_nametail(), true)};} else if (!e) {ret false;} ret atjs_parse_t_result()}; fun atjs_parse_pt_nametail() {this result = atjs_parse_init('nametail'); if (atjs_parse_handle(atjs_parse_matchchars_t(['az', 'AZ', '09', '_'], false), true)) {while (atjs_parse_handle(atjs_parse_matchchars_t(['az', 'AZ', '09', '_'], false), true)) {};} else if (!e) {ret false;} ret atjs_parse_t_result()}; fun atjs_parse_pt_string() {this result = atjs_parse_init('string'); if (atjs_parse_handle(atjs_parse_match_t('"'), true)) { while (!e && (atjs_parse_handle(atjs_parse_pt_dstritem(), true))) {}; if (!e && !(atjs_parse_handle(atjs_parse_match_t('"'), true))) {e = atjs_parse_error_t()};} else if (!e) {if (atjs_parse_handle(atjs_parse_match_t("'"), true)) { while (!e && (atjs_parse_handle(atjs_parse_pt_sstritem(), true))) {}; if (!e && !(atjs_parse_handle(atjs_parse_match_t("'"), true))) {e = atjs_parse_error_t()};} else if (!e) {ret false;}} ret atjs_parse_t_result()}; fun atjs_parse_pt_dstritem() {this result = atjs_parse_init('dstritem'); if (atjs_parse_handle(atjs_parse_match_t('\\'), true)) { if (!e && !(atjs_parse_handle(atjs_parse_matchany_t(), true))) {e = atjs_parse_error_t()};} else if (!e) {if (!(atjs_parse_handle(atjs_parse_matchchars_t(['"'], true), true)) && !e) {ret false;}} ret atjs_parse_t_result()}; fun atjs_parse_pt_sstritem() {this result = atjs_parse_init('sstritem'); if (atjs_parse_handle(atjs_parse_match_t('\\'), true)) { if (!e && !(atjs_parse_handle(atjs_parse_matchany_t(), true))) {e = atjs_parse_error_t()};} else if (!e) {if (!(atjs_parse_handle(atjs_parse_matchchars_t(["'"], true), true)) && !e) {ret false;}} ret atjs_parse_t_result()}; fun atjs_parse_pg_1() {if (!(atjs_parse_handle(atjs_parse_pe_codeblock(), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_pe_if(), true)) && !e) {ret false;}} ret !e}; fun atjs_parse_pg_0() {if (atjs_parse_handle(atjs_parse_match_e('else'), false)) { if (!e && !(atjs_parse_handle(atjs_parse_pg_1(), false))) {e = atjs_parse_error_e()};} else if (!e) {ret false;} ret !e}; fun atjs_parse_pg_3() {if (atjs_parse_handle(atjs_parse_match_e(','), false)) { if (!e && !(atjs_parse_handle(atjs_parse_match_e('name'), true))) {e = atjs_parse_error_e()};} else if (!e) {ret false;} ret !e}; fun atjs_parse_pg_2() {if (atjs_parse_handle(atjs_parse_match_e('name'), true)) { while (!e && (atjs_parse_handle(atjs_parse_pg_3(), false))) {};} else if (!e) {ret false;} ret !e}; fun atjs_parse_pg_4() {if (atjs_parse_handle(atjs_parse_match_e('name'), true)) { if (!e) {atjs_parse_handle(atjs_parse_pe_propref(), true)};} else if (!e) {if (!(atjs_parse_handle(atjs_parse_pe_propref(), true)) && !e) {ret false;}} ret !e}; fun atjs_parse_pg_5() {if (atjs_parse_handle(atjs_parse_match_e('('), true)) { if (!e && !(atjs_parse_handle(atjs_parse_match_e(')'), false))) {e = atjs_parse_error_e()};} else if (!e) {ret false;} ret !e}; fun atjs_parse_pg_6() {if (atjs_parse_handle(atjs_parse_match_e(':'), false)) { if (!e && !(atjs_parse_handle(atjs_parse_match_e('name'), true))) {e = atjs_parse_error_e()};} else if (!e) {ret false;} ret !e}; fun atjs_parse_pg_8() {if (!(atjs_parse_handle(atjs_parse_match_e('assignop'), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_match_e('='), true)) && !e) {ret false;}} ret !e}; fun atjs_parse_pg_9() {if (!(atjs_parse_handle(atjs_parse_match_e('assignop'), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_match_e('='), true)) && !e) {ret false;}} ret !e}; fun atjs_parse_pg_7() {if (atjs_parse_handle(atjs_parse_match_e('('), false)) { if (!e && !(atjs_parse_handle(atjs_parse_pe_args(), true))) {e = atjs_parse_error_e()}; if (!e && !(atjs_parse_handle(atjs_parse_match_e(')'), false))) {e = atjs_parse_error_e()}; result[0] = 'call';} else if (!e) {if (atjs_parse_handle(atjs_parse_pg_9(), false)) { if (!e && !(atjs_parse_handle(atjs_parse_pe_expression(), true))) {e = atjs_parse_error_e()}; result[0] = 'assign';} else if (!e) {if (atjs_parse_handle(atjs_parse_match_e('['), false)) { if (!e && !(atjs_parse_handle(atjs_parse_pe_expression(), true))) {e = atjs_parse_error_e()}; if (!e && !(atjs_parse_handle(atjs_parse_match_e(']'), false))) {e = atjs_parse_error_e()}; if (!e && !(atjs_parse_handle(atjs_parse_pg_8(), false))) {e = atjs_parse_error_e()}; if (!e && !(atjs_parse_handle(atjs_parse_pe_expression(), true))) {e = atjs_parse_error_e()}; result[0] = 'listassign';} else if (!e) {ret false;}}} ret !e}; fun atjs_parse_pg_10() {if (atjs_parse_handle(atjs_parse_match_e('='), false)) { if (!e && !(atjs_parse_handle(atjs_parse_pe_expression(), true))) {e = atjs_parse_error_e()};} else if (!e) {ret false;} ret !e}; fun atjs_parse_pg_11() {if (!(atjs_parse_handle(atjs_parse_match_e('string'), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_match_e('number'), true)) && !e) {ret false;}} ret !e}; fun atjs_parse_pg_13() {if (atjs_parse_handle(atjs_parse_match_e('||'), false)) { if (!e && !(atjs_parse_handle(atjs_parse_pe_and(), true))) {e = atjs_parse_error_e()};} else if (!e) {ret false;} ret !e}; fun atjs_parse_pg_12() {if (atjs_parse_handle(atjs_parse_pg_13(), false)) {while (atjs_parse_handle(atjs_parse_pg_13(), false)) {};} else if (!e) { result[0] = false;} ret !e}; fun atjs_parse_pg_15() {if (atjs_parse_handle(atjs_parse_match_e('&&'), false)) { if (!e && !(atjs_parse_handle(atjs_parse_pe_compare(), true))) {e = atjs_parse_error_e()};} else if (!e) {ret false;} ret !e}; fun atjs_parse_pg_14() {if (atjs_parse_handle(atjs_parse_pg_15(), false)) {while (atjs_parse_handle(atjs_parse_pg_15(), false)) {};} else if (!e) { result[0] = false;} ret !e}; fun atjs_parse_pg_17() {if (atjs_parse_handle(atjs_parse_match_e('compareop'), true)) { if (!e && !(atjs_parse_handle(atjs_parse_pe_sum(), true))) {e = atjs_parse_error_e()};} else if (!e) {ret false;} ret !e}; fun atjs_parse_pg_16() {if (atjs_parse_handle(atjs_parse_pg_17(), false)) {while (atjs_parse_handle(atjs_parse_pg_17(), false)) {};} else if (!e) { result[0] = false;} ret !e}; fun atjs_parse_pg_20() {if (!(atjs_parse_handle(atjs_parse_match_e('+'), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_match_e('-'), true)) && !e) {ret false;}} ret !e}; fun atjs_parse_pg_19() {if (atjs_parse_handle(atjs_parse_pg_20(), false)) { if (!e && !(atjs_parse_handle(atjs_parse_pe_product(), true))) {e = atjs_parse_error_e()};} else if (!e) {ret false;} ret !e}; fun atjs_parse_pg_18() {if (atjs_parse_handle(atjs_parse_pg_19(), false)) {while (atjs_parse_handle(atjs_parse_pg_19(), false)) {};} else if (!e) { result[0] = false;} ret !e}; fun atjs_parse_pg_22() {if (atjs_parse_handle(atjs_parse_match_e('productop'), true)) { if (!e && !(atjs_parse_handle(atjs_parse_pe_exponent(), true))) {e = atjs_parse_error_e()};} else if (!e) {ret false;} ret !e}; fun atjs_parse_pg_21() {if (atjs_parse_handle(atjs_parse_pg_22(), false)) {while (atjs_parse_handle(atjs_parse_pg_22(), false)) {};} else if (!e) { result[0] = false;} ret !e}; fun atjs_parse_pg_23() {if (atjs_parse_handle(atjs_parse_match_e('^'), true)) { if (!e && !(atjs_parse_handle(atjs_parse_pe_exponent(), true))) {e = atjs_parse_error_e()};} else if (!e) { result[0] = false;} ret !e}; fun atjs_parse_pg_25() {if (!(atjs_parse_handle(atjs_parse_match_e('to'), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_match_e('upto'), true)) && !e) {ret false;}} ret !e}; fun atjs_parse_pg_24() {if (atjs_parse_handle(atjs_parse_pg_25(), false)) { if (!e && !(atjs_parse_handle(atjs_parse_pe_listref(), true))) {e = atjs_parse_error_e()};} else if (!e) { result[0] = false;} ret !e}; fun atjs_parse_pg_27() {if (atjs_parse_handle(atjs_parse_match_e('['), false)) { if (!e && !(atjs_parse_handle(atjs_parse_pe_listrefparam(), true))) {e = atjs_parse_error_e()}; if (!e && !(atjs_parse_handle(atjs_parse_match_e(']'), false))) {e = atjs_parse_error_e()};} else if (!e) {ret false;} ret !e}; fun atjs_parse_pg_26() {if (atjs_parse_handle(atjs_parse_pg_27(), false)) {while (atjs_parse_handle(atjs_parse_pg_27(), false)) {};} else if (!e) { result[0] = false;} ret !e}; fun atjs_parse_pg_28() {if (atjs_parse_handle(atjs_parse_match_e(':'), false)) { if (!e) {atjs_parse_handle(atjs_parse_pe_expression(), true)}; result[0] = 'slice';} else if (!e) {ret false;} ret !e}; fun atjs_parse_pg_29() {if (atjs_parse_handle(atjs_parse_match_e('('), false)) { if (!e && !(atjs_parse_handle(atjs_parse_pe_args(), true))) {e = atjs_parse_error_e()}; if (!e && !(atjs_parse_handle(atjs_parse_match_e(')'), false))) {e = atjs_parse_error_e()}; result[0] = 'call';} else if (!e) {ret false;} ret !e}; fun atjs_parse_pg_31() {if (atjs_parse_handle(atjs_parse_match_e(','), false)) { if (!e && !(atjs_parse_handle(atjs_parse_pe_expression(), true))) {e = atjs_parse_error_e()};} else if (!e) {ret false;} ret !e}; fun atjs_parse_pg_30() {if (atjs_parse_handle(atjs_parse_pe_expression(), true)) { while (!e && (atjs_parse_handle(atjs_parse_pg_31(), false))) {};} else if (!e) {ret false;} ret !e}; fun atjs_parse_pg_34() {if (!(atjs_parse_handle(atjs_parse_pe_expression(), true)) && !e) {if (!(atjs_parse_match_eo(']', 0, false)) && !e) {ret false;}} ret !e}; fun atjs_parse_pg_33() {if (atjs_parse_handle(atjs_parse_match_e(','), false)) { if (!e && !(atjs_parse_handle(atjs_parse_pg_34(), false))) {e = atjs_parse_error_e()};} else if (!e) {ret false;} ret !e}; fun atjs_parse_pg_32() {if (atjs_parse_handle(atjs_parse_pe_expression(), true)) { while (!e && (atjs_parse_handle(atjs_parse_pg_33(), false))) {};} else if (!e) {ret false;} ret !e}; fun atjs_parse_pg_35() {if (atjs_parse_handle(atjs_parse_pt_tokenorgroup(), true)) { if (!e) {atjs_parse_handle(atjs_parse_pt_ws(), true)};} else if (!e) {ret false;} ret !e}; fun atjs_parse_pg_36() {if (atjs_parse_handle(atjs_parse_pt_tokenorgroup(), true)) { if (!e) {atjs_parse_handle(atjs_parse_pt_anyws(), true)};} else if (!e) {ret false;} ret !e}; fun atjs_parse_pg_37() {if (!(atjs_parse_match_to('}', 0, false)) && !e) {if (!(atjs_parse_matchany_to(0, true)) && !e) {ret false;}} ret !e}; fun atjs_parse_pg_39() {if (!(atjs_parse_match_to('}', 0, false)) && !e) {if (!(atjs_parse_matchany_to(0, true)) && !e) {ret false;}} ret !e}; fun atjs_parse_pg_38() {if (atjs_parse_handle(atjs_parse_pt_statementend(), true)) { if (!e) {atjs_parse_handle(atjs_parse_pt_anyws(), true)};} else if (!e) {if (atjs_parse_handle(atjs_parse_pg_39(), false)) { if (!e && !(atjs_parse_handle(atjs_parse_pt_emptyend(), true))) {e = atjs_parse_error_t()};} else if (!e) {ret false;}} ret !e}; fun atjs_parse_pg_40() {if (!(atjs_parse_handle(atjs_parse_matchchars_t([' ', '\t', '\r'], false), true)) && !e) {if (!(atjs_parse_handle(atjs_parse_pt_comment(), true)) && !e) {ret false;}} ret !e}; fun atjs_parse_pg_41() {if (!(atjs_parse_match_to('*/', 0, true) && atjs_parse_handle(atjs_parse_matchany_t(), true)) && !e) {ret false;} ret !e}; fun atjs_parse_pg_42() {if (!(atjs_parse_handle(atjs_parse_matchchars_t([' ', '\t', '\r', '\n'], false), false)) && !e) {if (!(atjs_parse_handle(atjs_parse_pt_comment(), false)) && !e) {ret false;}} ret !e}; fun atjs_parse_pg_43() {if (atjs_parse_handle(atjs_parse_pt_digits(), true)) { result[0] = 'number';} else if (!e) {ret false;} ret !e}; fun atjs_parse_pg_44() {if (atjs_parse_handle(atjs_parse_pt_nametail(), true)) { result[0] = 'name';} else if (!e) {ret false;} ret !e};
